{"version":3,"sources":["contexts/auth/index.js","components/AuthenticatedRoute/AuthenticatedRoute.js","components/PublicRoute/PublicRoute.js","hooks/useRequest.js","domain/admin/Requests/ListPage.js","components/DeleteButton/DeleteButton.js","components/EditButton/EditButton.js","components/NewButton/NewButton.js","components/PageHeader/PageHeader.js","domain/admin/Categories/ListPage.styles.js","domain/admin/Categories/ListPage.js","domain/admin/Categories/NewPage.styles.js","domain/admin/Categories/NewPage.js","domain/admin/Categories/EditPage.js","domain/admin/HomePage/HomePage.js","domain/user/HomePage/HomePage.js","containers/SignIn/SignIn.styles.js","containers/SignIn/SignIn.js","domain/admin/layouts/MainLayout/MainLayout.styles.js","domain/admin/layouts/MainLayout/MainLayout.js","App.js","reportWebVitals.js","index.js"],"names":["initialStates","isAuth","localStorage","getItem","accessToken","user","JSON","parse","AuthContext","createContext","AuthProvider","children","useReducer","state","action","type","payload","clear","dispatch","Provider","value","AuthenticatedRoute","Component","component","restProps","useContext","render","props","to","pathname","PublicRoute","useRequest","optionParams","useFetch","process","cachePolicy","interceptors","request","options","headers","Authorization","get","post","patch","delete","del","loading","error","response","data","columns","title","dataIndex","key","ListPage","useEffect","rowSelection","dataSource","map","item","index","pagination","pageSize","showSizeChanger","DeleteButton","danger","icon","MinusCircleOutlined","EditButton","EditOutlined","style","backgroundColor","color","borderColor","path","className","PlusCircleOutlined","PageHeaderComponent","history","useHistory","onBack","goBack","styled","div","total","useState","page","setPage","selectedIds","setSelectedIds","pageQuery","handleDeleteCategory","useCallback","a","PageHeader","useMemo","NewButton","disabled","length","onClick","onChange","_id","push","current","NewPage","onFinish","Form","useForm","form","replace","spinning","layout","Item","label","name","tooltip","InfoCircleOutlined","rules","required","message","autoFocus","htmlType","EditPage","categoryId","useParams","getResponse","setFieldsValue","getCategoryInfo","HomePage","SignIn","values","email","password","strategy","code","errorMessage","successMessage","setItem","stringify","setTimeout","initialValues","remember","noStyle","shouldUpdate","prevValues","curValues","getFieldValue","showIcon","Password","valuePropName","Header","Layout","Content","Sider","MainLayout","collapsed","setCollapsed","collapsible","onCollapse","theme","mode","defaultSelectedKeys","BarsOutlined","AlertOutlined","BookOutlined","UserOutlined","VideoCameraOutlined","FileOutlined","QuestionCircleOutlined","CheckCircleOutlined","overlay","SelectOutlined","LogoutOutlined","size","App","exact","SignInPage","AdminHomePage","ListRequest","ListCategory","NewCategory","EditCategory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.616e3120.chunk.js","sourcesContent":["import React, { createContext, useReducer } from \"react\";\n\nconst initialStates = {\n  isAuth: localStorage.getItem(\"isAuth\") || false,\n  accessToken: localStorage.getItem(\"accessToken\") || null,\n  user: localStorage.getItem(\"user\")\n    ? JSON.parse(localStorage.getItem(\"user\"))\n    : null,\n};\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const reducer = (state, action) => {\n    switch (action.type) {\n      case \"login\":\n        return {\n          isAuth: true,\n          accessToken: action.payload.accessToken,\n          user: action.payload.user,\n        };\n\n      case \"logout\":\n        localStorage.clear();\n        return { isAuth: false, accessToken: null, user: {} };\n\n      default: {\n        return { ...initialStates };\n      }\n    }\n  };\n\n  const [state, dispatch] = useReducer(reducer, initialStates);\n\n  return (\n    <AuthContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\n\nimport AuthContext from \"contexts/auth\";\n\nconst AuthenticatedRoute = ({ component: Component, ...restProps }) => {\n  const { isAuth } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...restProps}\n      render={(props) =>\n        isAuth ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={{ pathname: \"/sign_in\" }} />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthenticatedRoute;\n","import { Route, Redirect } from \"react-router-dom\";\nimport { useContext } from \"react\";\n\nimport AuthContext from \"contexts/auth\";\n\nconst PublicRoute = ({ component: Component, ...restProps }) => {\n  const { isAuth } = useContext(AuthContext);\n\n  return (\n    <Route\n      {...restProps}\n      render={(props) =>\n        !isAuth ? <Component {...props} /> : <Redirect to={{ pathname: \"/\" }} />\n      }\n    />\n  );\n};\n\nexport default PublicRoute;\n","import { useContext } from \"react\";\nimport useFetch from \"use-http\";\n\nimport AuthContext from \"contexts/auth\";\n\nconst useRequest = ({ optionParams = {} }) => {\n  const { accessToken } = useContext(AuthContext);\n\n  const { get, post, patch, del, loading, error, data } = useFetch(\n    process.env.REACT_APP_API_URL,\n    {\n      ...optionParams,\n      cachePolicy: \"no-cache\",\n      interceptors: {\n        request: ({ options }) => ({\n          ...options,\n          headers: {\n            ...options.headers,\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }),\n      },\n    }\n  );\n\n  return { get, post, patch, delete: del, loading, error, response: data };\n};\n\nexport default useRequest;\n","import { Table } from \"antd\";\nimport { useEffect } from \"react\";\nimport useRequest from \"hooks/useRequest\";\n\nconst columns = [\n  {\n    title: \"User\",\n    dataIndex: \"user\",\n    key: \"user\",\n  },\n  {\n    title: \"Course\",\n    dataIndex: \"course\",\n    key: \"course\",\n  },\n  {\n    title: \"Status\",\n    dataIndex: \"status\",\n    key: \"status\",\n  },\n];\n\nconst ListPage = () => {\n  const { get, loading, response = { data: [] } } = useRequest({});\n\n  useEffect(() => {\n    get(\"/requests\");\n  }, [get]);\n\n  return (\n    <Table\n      rowSelection={{ type: \"checkbox\" }}\n      columns={columns}\n      dataSource={response.data.map((item, index) => ({ ...item, key: index }))}\n      pagination={{ pageSize: 1, showSizeChanger: true }}\n      loading={loading}\n    />\n  );\n};\n\nexport default ListPage;\n","import { MinusCircleOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\n\nconst DeleteButton = (props) => {\n  return (\n    <Button type=\"primary\" danger icon={<MinusCircleOutlined />} {...props}>\n      Delete\n    </Button>\n  );\n};\n\nexport default DeleteButton;\n","import { EditOutlined } from \"@ant-design/icons\";\nimport { Button } from \"antd\";\n\nconst EditButton = (props) => {\n  return (\n    <Button\n      icon={<EditOutlined />}\n      type=\"ghost\"\n      style={{\n        backgroundColor: \"#fff3cd\",\n        color: \"#856404\",\n        borderColor: \"#ffeeba\",\n      }}\n      {...props}\n    >\n      Edit\n    </Button>\n  );\n};\n\nexport default EditButton;\n","import { Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nconst EditButton = ({ path }) => {\n  return (\n    <Link to={path} className=\"new-category\">\n      <Button type=\"primary\" icon={<PlusCircleOutlined />}>\n        New\n      </Button>\n    </Link>\n  );\n};\n\nexport default EditButton;\n","import { PageHeader } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\n\nconst PageHeaderComponent = (props) => {\n  const history = useHistory();\n\n  return <PageHeader onBack={() => history.goBack()} {...props} />;\n};\n\nexport default PageHeaderComponent;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  .new-category {\n    float: right;\n    margin: 16px 8px 16px;\n  }\n\n  .button-area {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n    padding-right: 8px;\n\n    button {\n      margin-left: 8px;\n    }\n  }\n`;\n","import { Table } from \"antd\";\nimport { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport DeleteButton from \"components/DeleteButton\";\nimport EditButton from \"components/EditButton\";\nimport NewButton from \"components/NewButton\";\nimport PageHeader from \"components/PageHeader\";\nimport useRequest from \"hooks/useRequest\";\nimport Wrapper from \"./ListPage.styles\";\n\nconst columns = [\n  {\n    title: \"Name\",\n    dataIndex: \"name\",\n    key: \"name\",\n  },\n  {\n    title: \"Action\",\n    dataIndex: \"action\",\n    key: \"action\",\n  },\n];\n\nconst ListPage = () => {\n  const history = useHistory();\n  const { get, post, loading, response = { data: [], total: 0 } } = useRequest(\n    {}\n  );\n\n  const [page, setPage] = useState(1);\n  const [selectedIds, setSelectedIds] = useState([]);\n\n  useEffect(() => {\n    const pageQuery = `limit=${10 * page}&skip=${10 * page - 10}`;\n    get(`/categories?${pageQuery}`);\n  }, [get, page]);\n\n  const handleDeleteCategory = useCallback(async () => {\n    await post(\"/remove_categories\", { selectedIds });\n    setSelectedIds([]);\n    setPage(1);\n  }, [post, selectedIds]);\n\n  return (\n    <Wrapper>\n      <PageHeader title=\"List category\" onBack={null} />\n\n      <div className=\"button-area\">\n        {useMemo(\n          () => (\n            <NewButton path=\"/admin/categories/new\" />\n          ),\n          []\n        )}\n\n        {useMemo(\n          () => (\n            <DeleteButton\n              disabled={!selectedIds.length}\n              onClick={handleDeleteCategory}\n            />\n          ),\n          [handleDeleteCategory, selectedIds.length]\n        )}\n      </div>\n\n      {useMemo(\n        () => (\n          <Table\n            rowSelection={{\n              type: \"checkbox\",\n              onChange: (data) => setSelectedIds(data),\n            }}\n            columns={columns}\n            dataSource={response.data.map((item) => ({\n              ...item,\n              key: item._id,\n              action: (\n                <EditButton\n                  onClick={() =>\n                    history.push(`/admin/categories/${item._id}/edit`)\n                  }\n                />\n              ),\n            }))}\n            pagination={{\n              onChange: (page) => setPage(page),\n              pageSize: 10,\n              total: response.total,\n              current: page,\n            }}\n            loading={loading}\n          />\n        ),\n        [history, loading, page, response.data, response.total]\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ListPage;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  form {\n    padding: 24px;\n  }\n`;\n","import { Form, Input, Button, Spin } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport PageHeaderComponent from \"components/PageHeader\";\nimport useRequest from \"hooks/useRequest\";\nimport Wrapper from \"./NewPage.styles\";\n\nconst NewPage = () => {\n  const history = useHistory();\n  const { post, loading, response = {} } = useRequest({});\n\n  const onFinish = useCallback(\n    (data) => {\n      post(\"/categories\", data);\n    },\n    [post]\n  );\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    if (response._id) {\n      history.replace(\"/admin/categories\");\n    }\n  }, [history, response]);\n\n  return (\n    <Spin spinning={loading}>\n      <Wrapper>\n        {useMemo(\n          () => (\n            <PageHeaderComponent title=\"New category\" />\n          ),\n          []\n        )}\n\n        {useMemo(\n          () => (\n            <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n              <Form.Item\n                label=\"Category name\"\n                name=\"name\"\n                tooltip={{\n                  title: \"This is a required field\",\n                  icon: <InfoCircleOutlined />,\n                }}\n                rules={[{ required: true, message: \"This field is required\" }]}\n              >\n                <Input autoFocus />\n              </Form.Item>\n\n              <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">\n                  Create\n                </Button>\n              </Form.Item>\n            </Form>\n          ),\n          [form, onFinish]\n        )}\n      </Wrapper>\n    </Spin>\n  );\n};\n\nexport default NewPage;\n","import { Form, Input, Button, Spin } from \"antd\";\nimport { InfoCircleOutlined } from \"@ant-design/icons\";\nimport { useCallback, useEffect, useMemo } from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport PageHeader from \"components/PageHeader\";\nimport useRequest from \"hooks/useRequest\";\nimport Wrapper from \"./NewPage.styles\";\n\nconst EditPage = () => {\n  const history = useHistory();\n  const { categoryId } = useParams();\n  const { get, patch, loading, response = {} } = useRequest({});\n\n  const onFinish = useCallback(\n    async (data) => {\n      const patchResponse = await patch(`/categories/${categoryId}`, data);\n      if (patchResponse._id) {\n        history.push(\"/admin/categories\");\n      }\n    },\n    [categoryId, history, patch]\n  );\n\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    const getCategoryInfo = async () => {\n      if (categoryId) {\n        const getResponse = await get(`/categories/${categoryId}`);\n        form.setFieldsValue({ name: getResponse.name });\n      }\n    };\n\n    getCategoryInfo();\n  }, [categoryId, form, get]);\n\n  return (\n    <Spin spinning={loading}>\n      <Wrapper>\n        {useMemo(\n          () => (\n            <PageHeader title=\"Edit category\" />\n          ),\n          []\n        )}\n\n        {useMemo(\n          () => (\n            <Form layout=\"vertical\" form={form} onFinish={onFinish}>\n              {!response._id && <p>Category not found</p>}\n\n              {response._id && (\n                <>\n                  <Form.Item\n                    label=\"Category name\"\n                    name=\"name\"\n                    tooltip={{\n                      title: \"This is a required field\",\n                      icon: <InfoCircleOutlined />,\n                    }}\n                    rules={[\n                      { required: true, message: \"This field is required\" },\n                    ]}\n                  >\n                    <Input autoFocus />\n                  </Form.Item>\n\n                  <Form.Item>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                      Update\n                    </Button>\n                  </Form.Item>\n                </>\n              )}\n            </Form>\n          ),\n          [form, onFinish, response._id]\n        )}\n      </Wrapper>\n    </Spin>\n  );\n};\n\nexport default EditPage;\n","const HomePage = () => {\n  return <h1>Home page admin</h1>;\n};\n\nexport default HomePage;\n","const HomePage = () => {\n  return <h1>User page</h1>;\n};\n\nexport default HomePage;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-color: #777;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  .ant-page-header {\n    padding-top: 0;\n  }\n\n  & > div {\n    width: 400px;\n    background-color: #fff;\n    padding: 24px;\n    border-radius: 8px;\n\n    .sign-in-title {\n      .ant-page-header-heading {\n        justify-content: center;\n      }\n    }\n\n    .ant-alert {\n      margin-bottom: 16px;\n    }\n\n    .ant-form-item:last-child {\n      margin-bottom: 0 !important;\n      text-align: center;\n    }\n  }\n`;\n","import { Form, Input, Button, Checkbox, Spin, Alert } from \"antd\";\nimport { useCallback, useMemo, useContext } from \"react\";\n\nimport AuthContext from \"contexts/auth\";\nimport PageHeaderComponent from \"components/PageHeader\";\nimport useRequest from \"hooks/useRequest\";\nimport Wrapper from \"./SignIn.styles\";\n\nconst SignIn = () => {\n  const { dispatch } = useContext(AuthContext);\n  const { post, loading } = useRequest({});\n\n  const [form] = Form.useForm();\n\n  const onFinish = useCallback(\n    async (values) => {\n      const response = await post(\"/authentication\", {\n        email: values.email,\n        password: values.password,\n        strategy: \"local\",\n      });\n\n      if (response.code) {\n        form.setFieldsValue({ errorMessage: response.message });\n        return;\n      }\n\n      const { accessToken, user } = response;\n      form.setFieldsValue({ successMessage: \"Login successfully\" });\n      localStorage.setItem(\"accessToken\", accessToken);\n      localStorage.setItem(\"user\", JSON.stringify(user));\n      localStorage.setItem(\"isAuth\", true);\n      setTimeout(() => {\n        dispatch({\n          type: \"login\",\n          payload: { user, accessToken },\n        });\n      }, 200);\n    },\n    [dispatch, form, post]\n  );\n\n  return (\n    <Spin spinning={loading}>\n      <Wrapper>\n        <div>\n          {useMemo(\n            () => (\n              <PageHeaderComponent\n                className=\"sign-in-title\"\n                title=\"SIGN IN\"\n                onBack={null}\n              />\n            ),\n            []\n          )}\n\n          {useMemo(\n            () => (\n              <Form\n                form={form}\n                name=\"basic\"\n                layout=\"vertical\"\n                initialValues={{ remember: true, errorMessage: null }}\n                onFinish={onFinish}\n                onChange={() => form.setFieldsValue({ errorMessage: null })}\n              >\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prevValues, curValues) =>\n                    prevValues.errorMessage !== curValues.errorMessage\n                  }\n                >\n                  {({ getFieldValue }) => {\n                    return !!getFieldValue(\"errorMessage\") ? (\n                      <Alert\n                        message={getFieldValue(\"errorMessage\")}\n                        type=\"error\"\n                        showIcon\n                      />\n                    ) : null;\n                  }}\n                </Form.Item>\n\n                <Form.Item\n                  noStyle\n                  shouldUpdate={(prevValues, curValues) =>\n                    prevValues.successMessage !== curValues.successMessage\n                  }\n                >\n                  {({ getFieldValue }) => {\n                    return !!getFieldValue(\"successMessage\") ? (\n                      <Alert\n                        message={getFieldValue(\"successMessage\")}\n                        type=\"success\"\n                        showIcon\n                      />\n                    ) : null;\n                  }}\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      type: \"email\",\n                      message: \"Please input your valid email!\",\n                    },\n                  ]}\n                >\n                  <Input autoFocus />\n                </Form.Item>\n\n                <Form.Item\n                  label=\"Password\"\n                  name=\"password\"\n                  rules={[\n                    { required: true, message: \"Please input your password!\" },\n                  ]}\n                >\n                  <Input.Password />\n                </Form.Item>\n\n                <Form.Item name=\"remember\" valuePropName=\"checked\">\n                  <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item>\n                  <Button type=\"primary\" htmlType=\"submit\">\n                    Login\n                  </Button>\n                </Form.Item>\n              </Form>\n            ),\n            [form, onFinish]\n          )}\n        </div>\n      </Wrapper>\n    </Spin>\n  );\n};\n\nexport default SignIn;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  min-height: 100vh;\n\n  .ant-layout {\n    min-height: 100vh;\n  }\n\n  .ant-layout-sider-collapsed {\n    .logo {\n      font-size: 12px !important;\n    }\n  }\n\n  .ant-layout-header {\n    height: 60px;\n  }\n\n  .logo {\n    min-height: 32px;\n    margin: 16px;\n    color: #fff;\n    font-size: 23px;\n    text-align: center;\n  }\n\n  .site-layout .site-layout-background {\n    background: #fff;\n  }\n\n  header.site-layout-background {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    padding: 0 24px 0 0;\n  }\n\n  main.site-layout-background {\n    margin: 16px 16px;\n    /* padding: 24px; */\n  }\n`;\n","import { useState, useContext } from \"react\";\nimport { Layout, Menu, Avatar, Dropdown } from \"antd\";\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  AlertOutlined,\n  BookOutlined,\n  FileOutlined,\n  QuestionCircleOutlined,\n  CheckCircleOutlined,\n  SelectOutlined,\n  LogoutOutlined,\n  BarsOutlined,\n} from \"@ant-design/icons\";\nimport { Link } from \"react-router-dom\";\n\nimport AuthContext from \"contexts/auth\";\nimport Wrapper from \"./MainLayout.styles\";\n\nconst { Header, Content, Sider } = Layout;\n\nconst MainLayout = ({ children }) => {\n  const { dispatch } = useContext(AuthContext);\n  const [collapsed, setCollapsed] = useState(false);\n\n  const toggle = () => {\n    setCollapsed(!collapsed);\n  };\n\n  return (\n    <Wrapper>\n      <Layout>\n        <Sider collapsible collapsed={collapsed} onCollapse={toggle}>\n          <div className=\"logo\">SALE COURSES</div>\n\n          <Menu theme=\"dark\" mode=\"inline\" defaultSelectedKeys={[]}>\n            <Menu.Item key=\"category\" icon={<BarsOutlined />}>\n              <Link to=\"/admin/categories\">Categories</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"request\" icon={<AlertOutlined />}>\n              <Link to=\"/admin/requests\">Requests</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"course\" icon={<BookOutlined />}>\n              Courses\n            </Menu.Item>\n\n            <Menu.Item key=\"user\" icon={<UserOutlined />}>\n              Users\n            </Menu.Item>\n\n            <Menu.Item key=\"video\" icon={<VideoCameraOutlined />}>\n              Videos\n            </Menu.Item>\n\n            <Menu.Item key=\"exam\" icon={<FileOutlined />}>\n              Exams\n            </Menu.Item>\n\n            <Menu.Item key=\"question\" icon={<QuestionCircleOutlined />}>\n              Questions\n            </Menu.Item>\n\n            <Menu.Item key=\"answer\" icon={<CheckCircleOutlined />}>\n              Answers\n            </Menu.Item>\n          </Menu>\n        </Sider>\n\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\">\n            <div className=\"user-info\">\n              <Dropdown\n                overlay={\n                  <Menu>\n                    <Menu.Item key=\"user-profile\" icon={<SelectOutlined />}>\n                      User profile\n                    </Menu.Item>\n                    <Menu.Item\n                      key=\"logout\"\n                      icon={<LogoutOutlined />}\n                      onClick={() => dispatch({ type: \"logout\" })}\n                    >\n                      Logout\n                    </Menu.Item>\n                  </Menu>\n                }\n              >\n                <Avatar size=\"large\" icon={<UserOutlined />} />\n              </Dropdown>\n            </div>\n          </Header>\n\n          {/* <Breadcrumb data={breadcrumb} /> */}\n\n          <Content className=\"site-layout-background\">{children}</Content>\n        </Layout>\n      </Layout>\n    </Wrapper>\n  );\n};\n\nexport default MainLayout;\n","import { BrowserRouter as Router, Switch } from \"react-router-dom\";\n\nimport { AuthProvider } from \"contexts/auth\";\nimport AuthenticatedRoute from \"components/AuthenticatedRoute\";\nimport PublicRoute from \"components/PublicRoute\";\n\nimport { ListRequest } from \"domain/admin/Requests\";\nimport {\n  ListCategory,\n  NewCategory,\n  EditCategory,\n} from \"domain/admin/Categories\";\nimport AdminHomePage from \"domain/admin/HomePage\";\nimport HomePage from \"domain/user/HomePage\";\nimport SignInPage from \"containers/SignIn\";\nimport MainLayout from \"domain/admin/layouts/MainLayout\";\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Switch>\n          <PublicRoute exact path=\"/sign_in\" component={SignInPage} />\n\n          <MainLayout>\n            <AuthenticatedRoute exact path=\"/admin\" component={AdminHomePage} />\n\n            <AuthenticatedRoute\n              exact\n              path=\"/admin/requests\"\n              component={ListRequest}\n            />\n\n            <AuthenticatedRoute\n              exact\n              path=\"/admin/categories\"\n              component={ListCategory}\n            />\n\n            <AuthenticatedRoute\n              exact\n              path=\"/admin/categories/new\"\n              component={NewCategory}\n            />\n\n            <AuthenticatedRoute\n              exact\n              path=\"/admin/categories/:categoryId/edit\"\n              component={EditCategory}\n            />\n\n            <AuthenticatedRoute exact path=\"/\" component={HomePage} />\n          </MainLayout>\n        </Switch>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}